# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def insert(self,head,item) : 
        temp = ListNode(item,None)
        if not head : return temp
        current = head
        while current.next : 
            current = current.next
        current.next = temp 
        return head
        
        
        
    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:
        new_list = ListNode(0,None)
        c1 = list1
        c2 = list2
#         if not list1 : return list2
#         if not list2 : return list1
        
        while c1 and c2 : 
            if c1.val < c2.val : 
                new_list = self.insert(new_list,c1.val)
                c1 = c1.next
            else:
                new_list = self.insert(new_list,c2.val)
                c2= c2.next
                
        while c1 : 
            new_list = self.insert(new_list,c1.val)
            c1 = c1.next
        while c2 : 
            new_list = self.insert(new_list,c2.val)
            c2 = c2.next
        return new_list.next
